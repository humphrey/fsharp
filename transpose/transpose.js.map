{"version":3,"sources":["transpose.fsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAWQ,uEAAR;AAAA;AAAA;;AAIQ;AAAW;;AAuBI;AAET,yCACG,0FADH,GAEC,0FAFD;;AAKA;AAAA;;AAAA,+BACO;AAAA;AAAC,aADR,MAEC;AAAA,sBAAkB,mEAAR;AAAA;AAAA,qBAAV;AAA4D;AAFlC,SAA3B;;AAIO;AAAA,oBAAC,aAAD;AAAA;;AAGb;AAAA,mBAAc;AAAA;AAAA,aAAd;AAAA;;AAEJ;AAvCY;;AAyCR,0DAAR;AAAA;AAAA,OAAoC,0BAApC;;AACQ,0DAAR;AAAA;AAAA,OAAoC,2BAApC;;AACQ,0DAAR;AAAA;AAAA,OAAoC,0BAApC","file":"transpose.js","sourceRoot":"/Users/humphrey/Projects/fsharp/transpose","sourcesContent":["// Note transposer in F# code\n// Just hard coded at the moment, as I haven't worked out how to use command line arguments\n//\n// To Compile:\n// $ fsharps transpose.fs\n//\n// To Run:\n// $ mono fsharp.exe\n//\n// Well, that's how it's done on Mac anyway\n\nprintfn \"Welcome to Humphreys Chord transposer\"\n\nlet TransposeNote note semitones style =\n\n    let allNotes = [\n        \"B#\", 0\n        \"C\",  0\n        \"C#\", 1 \n        \"Db\", 1\n        \"D\",  2\n        \"D#\", 3 \n        \"Eb\", 3\n        \"E\",  4\n        \"E#\", 5\n        \"Fb\", 4\n        \"F\",  5\n        \"F#\", 6 \n        \"Gb\", 6\n        \"G\",  7\n        \"G#\", 8 \n        \"Ab\", 8\n        \"A\",  9\n        \"A#\", 10 \n        \"Bb\", 10\n        \"Cb\", 11\n        \"B\",  11\n    ]\n    let allNotesDict = dict allNotes\n    let styleNotes = \n        match style with\n        | \"b\" -> [\"C\"; \"Db\"; \"D\"; \"Eb\"; \"E\"; \"F\"; \"Gb\"; \"G\"; \"Ab\"; \"A\"; \"Bb\"; \"B\"]\n        | _ -> [\"C\"; \"C#\"; \"D\"; \"D#\"; \"E\"; \"F\"; \"F#\"; \"G\"; \"G#\"; \"A\"; \"A#\"; \"B\"]\n\n    let NoteValue c = \n        match allNotesDict.TryGetValue(c) with\n        | true, v -> v\n        | _ -> failwith (sprintf \"The note '%s' was not in lookup table\" c)\n\n    let AddMod12 a = (a + semitones) % 12\n\n    let NoteAt i =\n        styleNotes |> Seq.item i\n\n    NoteValue note |> AddMod12 |> NoteAt\n\nprintfn \"C transposed by +5 is %s\" (TransposeNote \"C\" 5 \"#\")\nprintfn \"D transposed by -2 is %s\" (TransposeNote \"D\" -2 \"#\")\nprintfn \"A transposed by +1 is %s\" (TransposeNote \"A\" 1 \"b\")\n"]}